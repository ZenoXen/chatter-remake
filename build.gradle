plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

group = 'org.zh'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

javafx {
    version = "22"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

mainClassName = 'org.zh.chatter.ChatterRemakeApplication'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'io.netty:netty-all:4.1.24.Final'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// 添加一个自定义任务用于下载源代码
task downloadSources(type: Sync) {
    description = '下载源代码'
    group = 'build'

    // 设置下载源代码的目标目录
    into "$buildDir/sources"

    // 配置要下载源代码的依赖
    from configurations.compileClasspath
    include "**/*.jar"

    // 设置下载源代码的后缀
    eachFile { FileCopyDetails file ->
        def name = file.name
        if (name.endsWith('.jar')) {
            def sourceName = "${name.substring(0, name.lastIndexOf('.'))}-sources.jar"
        }
    }
}